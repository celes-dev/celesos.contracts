#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

struct contracts {
   static std::vector<uint8_t> system_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../celesos.system/celesos.system.wasm"); }
   static std::string          system_wast() { return read_wast("${CMAKE_BINARY_DIR}/../celesos.system/celesos.system.wast"); }
   static std::vector<char>    system_abi() { return read_abi("${CMAKE_BINARY_DIR}/../celesos.system/celesos.system.abi"); }
   static std::vector<uint8_t> token_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../celes.token/celes.token.wasm"); }
   static std::string          token_wast() { return read_wast("${CMAKE_BINARY_DIR}/../celes.token/celes.token.wast"); }
   static std::vector<char>    token_abi() { return read_abi("${CMAKE_BINARY_DIR}/../celes.token/celes.token.abi"); }
   static std::vector<uint8_t> msig_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../celes.msig/celes.msig.wasm"); }
   static std::string          msig_wast() { return read_wast("${CMAKE_BINARY_DIR}/../celes.msig/celes.msig.wast"); }
   static std::vector<char>    msig_abi() { return read_abi("${CMAKE_BINARY_DIR}/../celes.msig/celes.msig.abi"); }
   static std::vector<uint8_t> wrap_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../celes.wrap/celes.wrap.wasm"); }
   static std::string          wrap_wast() { return read_wast("${CMAKE_BINARY_DIR}/../celes.wrap/celes.wrap.wast"); }
   static std::vector<char>    wrap_abi() { return read_abi("${CMAKE_BINARY_DIR}/../celes.wrap/celes.wrap.abi"); }
   static std::vector<uint8_t> bios_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../celes.bios/celes.bios.wasm"); }
   static std::string          bios_wast() { return read_wast("${CMAKE_BINARY_DIR}/../celes.bios/celes.bios.wast"); }
   static std::vector<char>    bios_abi() { return read_abi("${CMAKE_BINARY_DIR}/../celes.bios/celes.bios.abi"); }

   struct util {
      static std::vector<uint8_t> test_api_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/test_api.wasm"); }
      static std::vector<uint8_t> exchange_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/exchange.wasm"); }
      static std::vector<uint8_t> system_wasm_old() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/celesos.system.old/celesos.system.wasm"); }
      static std::vector<char>    system_abi_old() { return read_abi("${CMAKE_SOURCE_DIR}/test_contracts/celesos.system.old/celesos.system.abi"); }
      static std::vector<uint8_t> msig_wasm_old() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/celes.msig.old/celes.msig.wasm"); }
      static std::vector<char>    msig_abi_old() { return read_abi("${CMAKE_SOURCE_DIR}/test_contracts/celes.msig.old/celes.msig.abi"); }
   };
};
}} //ns eosio::testing
